I"Ü<h2 id="what-is-palindrome"><strong>What is Palindrome?</strong></h2>

<p>Palindrome is a word or sentence that can be read forward or backward. For example, <code class="highlighter-rouge">racecar</code> is palindrome because
we can read from the either side and it still reads as <code class="highlighter-rouge">racecar</code>.</p>

<p>Spaces and capitalized letters are often ignored; thus, <code class="highlighter-rouge">raceCAR</code> and <code class="highlighter-rouge">RACe  Ca r</code> are all considered as palindrome string.</p>

<p><br /></p>

<h2 id="c-implementation"><strong>C++ Implementation</strong></h2>

<p>This is a straightforward basic palindrome algorith that checks whether a given string is palindrome. 
We can improve this algorithm by including case-conversion (upper to lower or vice versa) and space-removal to make it little bit more robust.</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">bool</span> <span class="nf">isPalindrome</span><span class="p">(</span><span class="n">string</span> <span class="n">str</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">const</span> <span class="kt">int</span> <span class="n">SIZE</span> <span class="o">=</span> <span class="n">str</span><span class="p">.</span><span class="n">size</span><span class="p">();</span>
    <span class="k">const</span> <span class="kt">int</span> <span class="n">HALF</span> <span class="o">=</span> <span class="n">SIZE</span> <span class="o">&gt;&gt;</span> <span class="mi">1</span><span class="p">;</span>

    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">HALF</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">str</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">!=</span> <span class="n">str</span><span class="p">[</span><span class="n">SIZE</span> <span class="o">-</span> <span class="n">i</span> <span class="o">-</span> <span class="mi">1</span><span class="p">])</span>
        <span class="p">{</span>
            <span class="k">return</span> <span class="nb">false</span><span class="p">;</span>
        <span class="p">}</span>   
    <span class="p">}</span>

    <span class="k">return</span> <span class="nb">true</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<p><br /></p>

<h2 id="explanation"><strong>Explanation</strong></h2>

<p>We have a string <code class="highlighter-rouge">racecar</code>.</p>

<p><img src="/assets/images/algorithm/palindrome/normal/palindrome-en.jpg" alt="Palindrome" /></p>

<p>From the picture above, we can see that every characters form a pair in palindrome with middle character being the exception in odd length string.</p>

<p>Since palindrome strings are symmetrical, we only need to check up to the midway to determine the palindrome-ness.</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">HALF</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>
<span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">str</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">!=</span> <span class="n">str</span><span class="p">[</span><span class="n">SIZE</span> <span class="o">-</span> <span class="n">i</span> <span class="o">-</span> <span class="mi">1</span><span class="p">])</span> 
        <span class="p">{</span> 
            <span class="k">return</span> <span class="nb">false</span><span class="p">;</span>
        <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p>If a string is asymmetrical, we simply return <code class="highlighter-rouge">false</code> and break.</p>

<p><br /></p>

<h2 id="exercises"><strong>Exercises</strong></h2>
<p>Try to solve these palindrome exercises from <a href="https://leetcode.com/problemset/all/?search=palindrome">LeetCode</a>.</p>
<ul>
  <li><a href="https://leetcode.com/problems/valid-palindrome/">125. Valid Palindrome</a></li>
  <li><a href="https://leetcode.com/problems/palindrome-number/">9. Palindrome Number</a></li>
</ul>
:ET