I"±.<h2 id="contents">Contents</h2>
<ul>
  <li><a href="#algo">Reverse a string</a></li>
  <li>Methods
    <ul>
      <li><a href="#pointer">Method 1: Pointer</a></li>
      <li><a href="#array">Method 2: Array</a></li>
      <li><a href="#stack">Method 3: Stack</a></li>
      <li><a href="#q">Method 4: Queue</a></li>
    </ul>
  </li>
  <li><a href="#app">Application</a></li>
  <li><a href="#try">Problems to Try</a></li>
  <li><a href="#ref">Reference</a></li>
</ul>
<hr />

<p><br /></p>

<h2 id="reverse-a-string-">Reverse a string <a id="algo"></a></h2>
<p>The algorithm itself is very straightforward. We start from the last character of a string and
print or save its character until it reaches the beginning to reverse a string, and there are
many ways to accomplish this task. I came up with four different methods to reverse a string
using Pointers, Array, Stack, and Queue.</p>

<p><br /></p>
<h2 id="methods">Methods</h2>
<h3 id="pointer-">Pointer <a id="pointer"></a></h3>
<p>Pointer is my favorite method to use when reversing a string. The code is clean and intuitive.</p>

<p>We use two pointers <code class="highlighter-rouge">p</code> and <code class="highlighter-rouge">q</code> where <code class="highlighter-rouge">p</code> points to the first character and <code class="highlighter-rouge">q</code> points
to the last character of a string. Then we compare two pointers value (<code class="highlighter-rouge">*p</code>, <code class="highlighter-rouge">*q</code>) and 
continue until <code class="highlighter-rouge">p &lt; q</code>.</p>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cm">/* String Reverse using two pointers */</span>
<span class="kt">void</span> <span class="nf">strrevptr</span><span class="p">(</span><span class="kt">char</span> <span class="o">*</span><span class="n">line</span><span class="p">)</span>
<span class="p">{</span>
	<span class="kt">char</span> <span class="o">*</span><span class="n">p</span> <span class="o">=</span> <span class="n">line</span><span class="p">;</span>
	<span class="kt">char</span> <span class="o">*</span><span class="n">q</span> <span class="o">=</span> <span class="n">line</span> <span class="o">+</span> <span class="n">strlen</span><span class="p">(</span><span class="n">line</span><span class="p">)</span> <span class="o">-</span> <span class="mi">1</span><span class="p">;</span>

	<span class="k">while</span><span class="p">(</span><span class="n">p</span> <span class="o">&lt;</span> <span class="n">q</span><span class="p">)</span>
	<span class="p">{</span>
		<span class="kt">char</span> <span class="n">temp</span> <span class="o">=</span> <span class="o">*</span><span class="n">p</span><span class="p">;</span>
		<span class="o">*</span><span class="n">p</span> <span class="o">=</span> <span class="o">*</span><span class="n">q</span><span class="p">;</span>
		<span class="o">*</span><span class="n">q</span> <span class="o">=</span> <span class="n">temp</span><span class="p">;</span>

		<span class="o">++</span><span class="n">p</span><span class="p">;</span>
		<span class="o">--</span><span class="n">q</span><span class="p">;</span>
	<span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="array-">Array <a id="array"></a></h3>
<p>The idea is same as pointer but we use array form of arithmetic instead of pointer arithmetic.</p>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cm">/* String reverse using array */</span>
<span class="kt">void</span> <span class="nf">strrevindex</span><span class="p">(</span><span class="kt">char</span> <span class="o">*</span><span class="n">line</span><span class="p">)</span>
<span class="p">{</span>
	<span class="kt">int</span> <span class="n">size</span> <span class="o">=</span> <span class="n">strlen</span><span class="p">(</span><span class="n">line</span><span class="p">);</span>
	<span class="kt">int</span> <span class="n">bound</span> <span class="o">=</span> <span class="n">size</span> <span class="o">&gt;&gt;</span> <span class="mi">1</span><span class="p">;</span>

	<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">bound</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>
	<span class="p">{</span>
		<span class="kt">char</span> <span class="n">temp</span> <span class="o">=</span> <span class="n">line</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
		<span class="n">line</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">line</span><span class="p">[</span><span class="n">size</span><span class="o">-</span><span class="p">(</span><span class="mi">1</span><span class="o">+</span><span class="n">i</span><span class="p">)];</span>
		<span class="n">line</span><span class="p">[</span><span class="n">size</span><span class="o">-</span><span class="p">(</span><span class="mi">1</span><span class="o">+</span><span class="n">i</span><span class="p">)]</span> <span class="o">=</span> <span class="n">temp</span><span class="p">;</span>
	<span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="stack">Stack<a id="stack"></a></h3>
<p>We can reverse a string using a stack and its pretty simple. We push all characters to the stack
and pop all of it.</p>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// Reverse string using a stack</span>
<span class="kt">void</span> <span class="nf">revstrstk</span><span class="p">(</span><span class="kt">char</span> <span class="o">*</span><span class="n">line</span><span class="p">)</span>
<span class="p">{</span>
	<span class="n">stack</span><span class="o">&lt;</span><span class="kt">char</span><span class="o">&gt;</span> <span class="n">stk</span><span class="p">;</span>
	<span class="kt">char</span> <span class="o">*</span><span class="n">p</span> <span class="o">=</span> <span class="n">line</span><span class="p">;</span>

	<span class="k">while</span><span class="p">(</span><span class="o">*</span><span class="n">p</span> <span class="o">!=</span> <span class="sc">'\0'</span><span class="p">)</span>
	<span class="p">{</span>
		<span class="n">stk</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="o">*</span><span class="n">p</span><span class="p">);</span>
		<span class="o">++</span><span class="n">p</span><span class="p">;</span>
	<span class="p">}</span>

	<span class="k">while</span><span class="p">(</span><span class="o">!</span><span class="n">stk</span><span class="p">.</span><span class="n">empty</span><span class="p">())</span>
	<span class="p">{</span>
		<span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">stk</span><span class="p">.</span><span class="n">top</span><span class="p">();</span>
		<span class="n">stk</span><span class="p">.</span><span class="n">pop</span><span class="p">();</span>
	<span class="p">}</span>
	<span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="queue">Queue<a id="q"></a></h3>
<p>In order to reverse a string, we need to use two queues.</p>

<p>Let <code class="highlighter-rouge">q1</code> and <code class="highlighter-rouge">q2</code> be the first and second queue, respectively.</p>
<ol>
  <li>add a character to <code class="highlighter-rouge">q1</code>.</li>
  <li>pop all <code class="highlighter-rouge">q1</code> to <code class="highlighter-rouge">q2</code>.</li>
  <li>pop all <code class="highlighter-rouge">q2</code> to <code class="highlighter-rouge">q1</code>.</li>
  <li>repeat above 3 steps until character is NULL</li>
</ol>

<p>Now we have a reversed string.</p>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// Reverse a string using two queues</span>
<span class="kt">void</span> <span class="nf">revstrstk</span><span class="p">(</span><span class="kt">char</span> <span class="o">*</span><span class="n">line</span><span class="p">)</span>
<span class="p">{</span>
	<span class="n">queue</span><span class="o">&lt;</span><span class="kt">char</span><span class="o">&gt;</span> <span class="n">q</span><span class="p">;</span>
	<span class="n">queue</span><span class="o">&lt;</span><span class="kt">char</span><span class="o">&gt;</span> <span class="n">q2</span><span class="p">;</span>
	<span class="kt">char</span> <span class="o">*</span><span class="n">p</span> <span class="o">=</span> <span class="n">line</span><span class="p">;</span>

	<span class="k">while</span><span class="p">(</span><span class="o">*</span><span class="n">p</span> <span class="o">!=</span> <span class="sc">'\0'</span><span class="p">)</span>
	<span class="p">{</span>
		<span class="n">q</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="o">*</span><span class="n">p</span><span class="p">);</span>
		
		<span class="k">while</span><span class="p">(</span><span class="o">!</span><span class="n">q2</span><span class="p">.</span><span class="n">empty</span><span class="p">())</span>
		<span class="p">{</span>
			<span class="n">q</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="n">q2</span><span class="p">.</span><span class="n">front</span><span class="p">());</span>
			<span class="n">q2</span><span class="p">.</span><span class="n">pop</span><span class="p">();</span>
		<span class="p">}</span>

		<span class="k">while</span><span class="p">(</span><span class="o">!</span><span class="n">q</span><span class="p">.</span><span class="n">empty</span><span class="p">())</span>
		<span class="p">{</span>
			<span class="n">q2</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="n">q</span><span class="p">.</span><span class="n">front</span><span class="p">());</span>
			<span class="n">q</span><span class="p">.</span><span class="n">pop</span><span class="p">();</span>
		<span class="p">}</span>

		<span class="o">++</span><span class="n">p</span><span class="p">;</span>
	<span class="p">}</span>

	<span class="n">p</span> <span class="o">=</span> <span class="n">line</span><span class="p">;</span>
	<span class="k">while</span><span class="p">(</span><span class="o">!</span><span class="n">q2</span><span class="p">.</span><span class="n">empty</span><span class="p">())</span>
	<span class="p">{</span>
		<span class="o">*</span><span class="n">p</span> <span class="o">=</span> <span class="n">q2</span><span class="p">.</span><span class="n">front</span><span class="p">();</span>
		<span class="n">q2</span><span class="p">.</span><span class="n">pop</span><span class="p">();</span>
		<span class="o">++</span><span class="n">p</span><span class="p">;</span>
	<span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p><br /></p>
<h2 id="application-">Application <a id="app"></a></h2>
<ul>
  <li>Interview Questions</li>
  <li>Sexeger (check reference)</li>
</ul>

<p><br /></p>
<h2 id="problems-to-try-">Problems to try <a id="try"></a></h2>
<ul>
  <li><a href="https://leetcode.com/problems/reverse-string/">Reverse a String</a></li>
</ul>

<p><br /></p>
<h2 id="reference">Reference<a id="ref"></a></h2>
<ul>
  <li><a href="https://softwareengineering.stackexchange.com/questions/24691/what-do-you-use-string-reversal-for">StackExchange : string reversal usage</a></li>
  <li><a href="https://www.perlmonks.org/index.pl?node=sexeger">sexeger</a></li>
</ul>
:ET