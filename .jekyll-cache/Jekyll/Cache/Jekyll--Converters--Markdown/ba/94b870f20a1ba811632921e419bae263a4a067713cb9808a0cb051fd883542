I"â<p>Boolean data type is a data type that has two values: <em>true</em> and <em>false</em>. It is named after <strong>George Boole</strong> who first defined an algebraic system of logic.</p>

<p>C did not have keywords like <code class="highlighter-rouge">bool</code> or even <code class="highlighter-rouge">true</code> and <code class="highlighter-rouge">false</code> that exist in many other programming lanugages.
In order to <em>replicate</em> boolean, we had code something like this:</p>

<figure class="highlight"><pre><code class="language-c" data-lang="c"><span class="k">typedef</span> <span class="kt">int</span> <span class="n">bool</span><span class="p">;</span>

<span class="cp">#define TRUE 1
#define FALSE 0
</span>
<span class="n">bool</span> <span class="n">bAlive</span> <span class="o">=</span> <span class="n">TRUE</span><span class="p">;</span>

<span class="k">while</span><span class="p">(</span><span class="n">bAlive</span><span class="p">)</span>
<span class="p">{</span>
<span class="p">...</span>
<span class="p">}</span></code></pre></figure>

<p>After C99 updates, several keywords were added and boolean type was one of them. Now we can declare boolean types using its own keyword: <code class="highlighter-rouge">_Bool</code>.</p>

<p>However, they created the keword for boolean but not <code class="highlighter-rouge">true</code> and `false. So we still need to declare macros for those values:</p>

<figure class="highlight"><pre><code class="language-c" data-lang="c"><span class="cp">#define TRUE 1
#define FALSE 0
</span>
<span class="kt">_Bool</span> <span class="n">bAlive</span> <span class="o">=</span> <span class="n">TRUE</span><span class="p">;</span>

<span class="k">while</span><span class="p">(</span><span class="n">bAlive</span><span class="p">)</span>
<span class="p">{</span>
<span class="p">...</span>
<span class="p">}</span></code></pre></figure>

<p>C99 introduces new library <code class="highlighter-rouge">stdbool.h</code>. <br />
If you donâ€™t have any legacy code that already uses a macro for boolean, it is safe to include <code class="highlighter-rouge">stdbool.h</code> and use <code class="highlighter-rouge">bool</code>, <code class="highlighter-rouge">true</code>, and <code class="highlighter-rouge">false</code> like other programming language.</p>

<figure class="highlight"><pre><code class="language-c" data-lang="c"><span class="cp">#include &lt;stdbool.h&gt;
</span>
<span class="n">bool</span> <span class="n">bAlive</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>

<span class="k">while</span><span class="p">(</span><span class="n">bAlive</span><span class="p">)</span>
<span class="p">{</span>
<span class="p">...</span>
<span class="p">}</span></code></pre></figure>

<p>The reason why I mentioned about the safeness above is because <code class="highlighter-rouge">stdbool.h</code> is really nothing but a macro. You donâ€™t want to include something that interferes with your macro.</p>

<p>The inside looks roughly like this:</p>

<figure class="highlight"><pre><code class="language-c" data-lang="c"><span class="cp">#ifndef _STDBOOL_H
#define _STDBOOL_H
</span>
<span class="cp">#define bool        _Bool
#define true        1
#define false        0
</span>
<span class="cp">#endif</span></code></pre></figure>

<p>A link to the full code of <code class="highlighter-rouge">stdbool.h</code> can be found below on the reference.</p>

<p><br /></p>
<h2 id="reference">Reference</h2>
<ul>
  <li><a href="https://sites.uclouvain.be/SystInfo/usr/include/stdbool.h.html">stdbool.h</a> <a id="stdbool"></a></li>
  <li><a href="https://www.daniweb.com/programming/software-development/threads/240998/usage-of-new-keywords-in-c99">usage of new keywords in c99</a><a id="usage"></a></li>
</ul>
:ET