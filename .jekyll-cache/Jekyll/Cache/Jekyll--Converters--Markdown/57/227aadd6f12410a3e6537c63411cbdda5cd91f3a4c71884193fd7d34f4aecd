I"Û<p>Subscribe <a href="https://www.dailycodingproblem.com">Daily Coding Problem</a> to receive a coding problem every day.</p>

<h2 id="dcp-5-"><strong>DCP #5</strong> <a id="dcp5"></a></h2>
<p>This problem was asked by Jane Street.</p>

<p><code class="highlighter-rouge">cons(a, b)</code> constructs a pair, and <code class="highlighter-rouge">car(pair)</code> and <code class="highlighter-rouge">cdr(pair)</code> returns the first and last element of that pair. For example, <code class="highlighter-rouge">car(cons(3, 4))</code> returns <code class="highlighter-rouge">3</code>, and <code class="highlighter-rouge">cdr(cons(3, 4))</code> returns <code class="highlighter-rouge">4</code>.</p>

<p>Given this implementation of cons:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">cons</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">):</span>
    <span class="k">def</span> <span class="nf">pair</span><span class="p">(</span><span class="n">f</span><span class="p">):</span>
        <span class="k">return</span> <span class="n">f</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">pair</span>
</code></pre></div></div>
<p>Implement <code class="highlighter-rouge">car</code> and <code class="highlighter-rouge">cdr</code>.</p>

<p><br /></p>

<h2 id="my-solution--python"><strong>My Solution : Python</strong></h2>
<p>This problem can only be done with a language which provide nested methods (I think) and Ruby doesnâ€™t. So I used Python.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">cons</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">):</span>
    <span class="k">def</span> <span class="nf">pair</span><span class="p">(</span><span class="n">f</span><span class="p">):</span>
        <span class="k">return</span> <span class="n">f</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">);</span>
    <span class="k">return</span> <span class="n">pair</span>

<span class="k">def</span> <span class="nf">car</span><span class="p">(</span><span class="n">pair</span><span class="p">):</span>
    <span class="k">def</span> <span class="nf">left</span><span class="p">(</span><span class="n">left</span><span class="p">,</span> <span class="n">right</span><span class="p">):</span>
        <span class="k">return</span> <span class="n">left</span>
    <span class="k">return</span> <span class="n">pair</span><span class="p">(</span><span class="n">left</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">cdr</span><span class="p">(</span><span class="n">pair</span><span class="p">):</span>
    <span class="k">def</span> <span class="nf">right</span><span class="p">(</span><span class="n">left</span><span class="p">,</span> <span class="n">right</span><span class="p">):</span>
        <span class="k">return</span> <span class="n">right</span>
    <span class="k">return</span> <span class="n">pair</span><span class="p">(</span><span class="n">right</span><span class="p">)</span>
</code></pre></div></div>

<p><br /></p>

<h2 id="explanation"><strong>Explanation</strong></h2>

<p>uh.. I donâ€™t know much about Python, but I do know that <code class="highlighter-rouge">cons</code> returns a function called <code class="highlighter-rouge">pair</code> and we need to pass in another function to get what we want.</p>

<p>I created two functions <code class="highlighter-rouge">left(a, b)</code> and <code class="highlighter-rouge">right(a, b)</code> that basically returns an argument one on the left(<code class="highlighter-rouge">a</code>) and right(<code class="highlighter-rouge">b</code>) respectively.</p>

<p>We can make above codes slightly shorter using <code class="highlighter-rouge">lambda</code>.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">car</span><span class="p">(</span><span class="n">pair</span><span class="p">):</span>
    <span class="k">return</span> <span class="n">pair</span><span class="p">(</span><span class="k">lambda</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">:</span> <span class="n">x</span><span class="p">)</span>
    
<span class="k">def</span> <span class="nf">cdr</span><span class="p">(</span><span class="n">pair</span><span class="p">):</span>
    <span class="k">return</span> <span class="n">pair</span><span class="p">(</span><span class="k">lambda</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">:</span> <span class="n">y</span><span class="p">)</span>
</code></pre></div></div>
<p><br /></p>

<h2 id="related-posts"><strong>Related Posts</strong></h2>

<div class="relatedPosts">





  

    
    

    

    

  

    
    

    

    

  

    
    

    

    

  

    
    

    

    

  

    
    

    

    

  

    
    

    

    

  

    
    

    

    

  

    
    

    

    

  

    
    

    

    

  

    
    

    

    
      <div>
      â”ˆ <a href="/dcp/2019/10/27/en-dcp-7.html">DCP 7: Message Decoding</a>
      </div>
      
      
    

  

    
    

    

    

  

    
    

    

    

  

    
    

    

    
      <div>
      â”ˆ <a href="/dcp/2019/10/25/en-dcp-6.html">DCP 6: XOR Linked List</a>
      </div>
      
      
    

  

    
    

    

    

  

    
    

    

    

  

    
    

    

    

  

    
    

    

    

  

    
    

    

    

  

    
    

    

    

  

    
    

    

    

  

    
    

    

    

  

    
    

    

    

  

    
    

    

    
      <div>
      â”ˆ <a href="/dcp/2019/09/21/en-dcp-4.html">DCP 4: Lowest Positive Number</a>
      </div>
      
      
    

  

    
    

    

    

  

    
    

    

    

  

    
    

    

    
      <div>
      â”ˆ <a href="/dcp/2019/09/20/en-dcp-3.html">DCP 3: (De)serialization</a>
      </div>
      
      
    

  

    
    

    

    

  

    
    

    

    

  

    
    

    

    
      <div>
      â”ˆ <a href="/dcp/2019/09/19/en-dcp-2.html">DCP 2: New Array</a>
      </div>
      
      
        

</div>
:ET